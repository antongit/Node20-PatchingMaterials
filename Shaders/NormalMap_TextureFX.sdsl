shader NormalMap_TextureFX : TextureFX
{
    float2 R;
    float Radius = 1;
    float NDepth = 1;

    float4 q(float2 x,float2 off,float v)
    {
        // TODO Should we use Sampler0 almost like everywhere?
        return Texture0.SampleLevel(LinearSampler,x+off/R,1+v);
    }

    float gam(float x,float y)
    {
        return sign(x)*pow(abs(x),y);
    }
    
    float sat(float4 c,float4 d)
    {
	    return (dot(c.rgb,1./3.)-dot(d.rgb,1./3.))/sqrt(dot(c.rgb,1./3.)+dot(d.rgb,1./3.));
    }

    stage override float4 Shading()
    {
        float2 x = streams.TexCoord;
        float rad=max(Radius,0);
        float3 e=float3(1,-1,0)*rad;
        float v=log2(rad);
        float4 cx=q(x,e.xy,v)+q(x,e.xz,v)+q(x,e.xx,v)-q(x,e.yy,v)-q(x,e.yz,v)-q(x,e.yx,v);
        float4 cy=q(x,e.yy,v)+q(x,e.zy,v)+q(x,e.xy,v)-q(x,e.yx,v)-q(x,e.zx,v)-q(x,e.xx,v);
        float4 c=0;
        float d=pow(2,NDepth);
	    c.r=d*sat(q(x,e.xz,v),q(x,e.yz,v));
	    c.g=d*sat(q(x,e.zx,v),q(x,e.zy,v));
	    c.b=1;
	    c.rgb=normalize(c.rgb);
	    c.rg=.5+c.rg;
        c.a=Texture0.Sample(LinearSampler,x).a;
        return c;
    }
};